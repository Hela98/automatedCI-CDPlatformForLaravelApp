version: '3'
services:

  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app-php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network


  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - app
      - redis
      - db

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - app-network
  
  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: laravel_app
      POSTGRES_PASSWORD: my_password
      
    volumes:
      - ./dbdata:/var/lib/postgresql/ 
      - ./postgres/my.cnf:/etc/postgresql/my.cnf 
    networks:
      - app-network

  mysql:
    image: mysql
    hostname: mysql
    expose:
      - 3306
    environment: 
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_USER=sonarqube
      - MYSQL_PASSWORD=sonarqube
      - MYSQL_DATABASE=sonarqube
    volumes:
      - ./mysql:/var/lib/mysql 
    restart: unless-stopped
    container_name: mysql

    
  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    ports:
      - 10081:8080
      - 50000:50000
    volumes: 
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped


  sonar:
    image: webdizz/sonarqube
    ports:
      - 10082:9000
    depends_on: 
      - mysql
    environment: 
      - SONAR_JDBC_URL=jdbc:mysql://mysql:3306/sonarqube?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
      - SONAR_DB_USERNAME=sonarqube
      - SONAR_DB_PASSWORD=sonarqube
    volumes:
      - ./sonar:/opt/sonar
    restart: unless-stopped
    container_name: sonar

  
    

networks:
  app-network:
    driver: bridge

volumes:
    dbdata:
        driver: local
  
